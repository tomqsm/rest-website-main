<?xml version="1.0"?>
<project name="memset" default="run" basedir=".">
    <!-- <taskdef> needed for running of 'if' 'else' in targets so this build
    file could be use in Linux and Windows without modifications -->
    <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
    
    <property file="../to_upload/config/upload.properties"/>
    <property file="deploy/to_upload/config/upload.properties"/>
    <!--<property name="gf" value="/home/tomasz/glassfish-3.1.2.2/glassfish/domains/domain1/autodeploy"/>-->
    <property name="gf" value="C:\Users\Tomasz\glassfish-3.1.2.2\glassfish\domains\domain1\autodeploy"/>
    <!--<property name="gf" value="/home/toks/glassfish-3.1.2.2/glassfish/domains/domain1/autodeploy"/>-->
    <!--<property name="gf" value="/home/toks/glassfish3/glassfish/domains/domain1/autodeploy"/>-->
    <property name="jetty" value="c:\projects\jetty9\webapps\"/>
    <property name="tomcat" value="c:\cygwin\home\Tomasz\tomcat\webapps\"/>
    <property name="warroot" value="lukasfloorcom-1.0"/>
    <property name="war.file" value="${warroot}.war"/>
    <property name="server.autodeploy" value="${tomcat}"/>
    
    <target name="checkos">
        <condition property="isWindows" value="true">
            <os family="windows" />
        </condition>

        <condition property="isLinux" value="true">
            <os family="unix" />
        </condition>
        <echo message="Checked OS." />
    </target>
    
    <!--this tasks runs via mvn ant-run is triggered there-->
    <target name="deploy" depends="checkos" description="Copying a war file to server autodeploy.">
        <if>
            <equals arg1="${isWindows}" arg2="true"/>
            <then>
                <copy file="target/${war.file}" todir="${server.autodeploy}"/>
                <echo message="Copied ${war.file} to ${server.autodeploy}." />
            </then>
            <elseif>
                <equals arg1="${isLinux}" arg2="true"/>
                <then>
                    <echo message="Unix, not copying war file to autodeploy." />
                </then>
            </elseif>
            <else>
                <echo message="Sorry, ant script didn not conditioned this OS." />
            </else>
        </if>
    </target>
    
    <!--this tasks runs via mvn ant-run is triggered there-->
    <target name="undeploy" depends="checkos" description="Deleting war file from server autodeploy.">
        <if>
            <equals arg1="${isWindows}" arg2="true"/>
            <then>
                <delete file="${server.autodeploy}${war.file}"/>
                <echo message="Deleted ${war.file} in ${server.autodeploy}." />
            </then>
            <elseif>
                <equals arg1="${isLinux}" arg2="true"/>
                <then>
                    <echo message="Unix, not copying war file to autodeploy." />
                </then>
            </elseif>
            <else>
                <echo message="Sorry, ant script didn not conditioned this OS." />
            </else>
        </if>
    </target>
    
    <!--UPLOAD AS MVN PROJECT-->
    <target name="upload-project" depends="updateVersion">
        <scp todir="${remote.server.user}@${remote.server.ip}:${mvnprojects}/${warroot}" password="${password}" >
            <fileset dir="${basedir}">
                <modified update="true" 
                          seldirs="true"
                          cache="propertyfile"
                          algorithm="digest"
                          comparator="equal">
                    <param name="cache.cachefile"     value="cache.properties"/>
                    <param name="algorithm.algorithm" value="MD5"/>
                </modified>
                <!--exclude scripts from upload because they loose x and need chmod--> 
                <exclude name="deploy/*.sh" />
                <exclude name="target/**" />
                <exclude name="_notes/**" />
                <exclude name="_notes" />
                <exclude name=".*" />
                <exclude name="nb-configuration.xml" />
                <exclude name="*.mwb" />
                <!--<exclude name="build.xml" />-->
                <exclude name="cache.properties" />
            </fileset>
        </scp>
    </target>
    
    <!--    EXTERNAL TARGETS -->
    
    <target name="number.tests" description="uses node runtime, so it needs to be set-up">
        <echo message="Setting numbers to tests in listed files."/>
        <apply executable="node">
            <srcfile/>
            <fileset dir="${basedir}" includes="numbertests.js"/>
            <arg value="menuAppTests.js" />
        </apply>
    </target>
    <target name="updateVersion" description="uses node runtime, so it needs to be set-up">
        <echo message="Updating project version."/>
        <apply executable="node">
            <srcfile/>
            <fileset dir="${basedir}" includes="versionupdater.js"/>
            <arg value="" />
        </apply>
    </target>
    <!--CONCATINATE-->
    <target name="build_app">
        <concat destfile="${basedir}/src/main/webapp/static/js/app.js" 
                fixlastline="yes" encoding="UTF-8" outputencoding="UTF-8">
            <!--INTROS-->
            <filelist dir="${basedir}/src/main/resources/jsbuild" files="header.txt"/>
            <!--MODULE PATTERN OPEN -->
            <!--<filelist dir="${basedir}/build_parts" files="_open_app_"/>-->
            <!--APP FILES-->
            <filelist dir="${basedir}/src/main/webapp/static/js" files="globals.js"/>
            <filelist dir="${basedir}/src/main/webapp/static/js" files="utilsApp.js"/>
            <filelist dir="${basedir}/src/main/webapp/static/js" files="textimageApp.js"/>
            <filelist dir="${basedir}/src/main/webapp/static/js" files="menuApp.js"/>
            <!--            <filelist dir="${basedir}/my_js_sources" files="tools.js"/>-->
            <!--<filelist dir="${basedir}/my_js_sources" files="parasitic_combination_inheritance.js"/>-->
            <!--            <filelist dir="${basedir}/my_js_sources" files="namespacing.js"/>-->
            <!--MODULE PATTERN CLOSE-->
            <!--<filelist dir="${basedir}/build_parts" files="_close_app_"/>-->
        </concat>
    </target>
    <target name="build_tests">
        <concat destfile="${basedir}/unit_test/tests.js">
            <!--            <filelist dir="${basedir}/my_js_sources" files="generic_test.js"/>-->
            <!--            <filelist dir="${basedir}/my_js_sources" files="tools_test.js"/>-->
            <filelist dir="${basedir}/my_js_sources" files="parasitic_combination_inheritance_test.js"/>
            <!--            <filelist dir="${basedir}/my_js_sources" files="namespacing_test.js"/>-->
        </concat>
    </target>
    <target name="build_app_and_tests" depends="build_app"/>
    <!--COMPRESS-->
    <property name="yuicompressor.jar" value="yuicompressor-2.4.7.jar" />
    <target name="minify_app" depends="build_app">
        <apply executable="java" parallel="false">
            <fileset dir="${basedir}/src/main/webapp/static/js" includes="app.js" />
            <arg line="-jar" />
            <arg path="${yuicompressor.jar}" />
            <arg line="-o ${basedir}/src/main/webapp/static/js/app-min.js"/>
            <srcfile/>
        </apply>
    </target>
</project>