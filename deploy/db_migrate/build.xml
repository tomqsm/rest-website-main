<?xml version="1.0"?>
<project name="migration" default="run" basedir=".">
    <property file="second_screen_db.properties"/>
    <property file="../to_upload/config/upload.properties"/>
    
    <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
    <target name="checkos">
        <condition property="isWindows" value="true">
            <os family="windows" />
        </condition>

        <condition property="isLinux" value="true">
            <os family="unix" />
        </condition>
    </target>

    <target name="dump-out" depends="checkos" description="dumps locally db">
        <if>
            <equals arg1="${isWindows}" arg2="true"/>
            <then>
                <exec dir="${basedir}" executable="dump_out.bat"></exec>
            </then>
            <else>
                <exec dir="${basedir}" executable="./dump_out.sh"></exec>
            </else>
        </if>
    </target>
    
    <target name="dump-in" depends="checkos" description="executes a locally dumped sql file and creates db">
        <if>
            <equals arg1="${isWindows}" arg2="true"/>
            <then>
                <exec dir="${basedir}" executable="dump_in.bat"></exec>
            </then>
            <else>
                <exec dir="${basedir}" executable="./dump_in.sh"></exec>
            </else>
        </if>
    </target>
    
    <target name="download-dump-remote" description="produces a dump file">
        <scp file="${remote.server.user}:${password}@${remote.server.ip}:${remote.erest.dropbox.migration}/second_screen.sql" todir="."/>
    </target>
    
    <target name="upload-dump-out">
        <scp todir="${remote.server.user}@${remote.server.ip}:${remote.erest.dropbox.migration}" keyfile="${key.file.location}" passphrase="${passphrase}" trust="true" >
            <!--<scp todir="${remote.server.user}@${remote.server.ip}:${remote.erest.dropbox.migration}" password="${password}" >-->
            <fileset dir="${basedir}">
                <modified update="true" 
                          seldirs="true"
                          cache="propertyfile"
                          algorithm="digest"
                          comparator="equal">
                    <param name="cache.cachefile"     value="../to_upload/config/db_migrate.properties"/>
                    <param name="algorithm.algorithm" value="MD5"/>
                </modified>
                <include name="second_screen.sql" />
                <exclude name="cache.properties" />
                <exclude name="dump_in.bat" />
                <exclude name="dump_out.bat" />
            </fileset>
        </scp>
    </target>

    
    <target name="dump-in-remote">
        <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
        <sshexec host="${remote.server.ip}"
                 username="${remote.server.user}"
                 password="${password}"
                 command="cd /usr/java/ant/bin; ant -f ${remote.erest.dropbox.migration}/build.xml dump-in"/>
    </target>
    <target name="dump-out-remote">
        <sshexec host="${remote.server.ip}"
                 username="${remote.server.user}"
                 password="${password}"
                 command="cd /usr/java/ant/bin; ant -f ${remote.erest.dropbox.migration}/build.xml dump-out"/>
    </target>
    
    <target name="sync2local" depends="dump-out, upload-dump-out, dump-in-remote" />
    
    <target name="sync2remote" depends="dump-out-remote, download-dump-remote, dump-in" />
    
</project>
